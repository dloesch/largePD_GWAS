library(SNPRelate)
?snpgdsLDpruning
library(SeqArray)
?seqGetData
?SeqArray
library(gdsfmt)
gdsn.class
gdsn.class()
?seqGetData
?snpgdsVCF2GDS
?snpgdsLDpruning
?snpgdsGRM
?snpgdsMergeGRM
snps <-c()
sqrt(0.1)
r2=sqrt(0.1)
#ld characteristics
win=10*1E-06
?seqMerge
source("topmed.R")
countThreads()
?parallel
library(parallel)
?parallel
library(SeqArray)
library(tools)
library(SNPRelate)
library(parallel)
# Use the detectCores() function to find the number of cores in system
no_cores <- detectCores()
countThreads()
#Setting a base variable
base <- 4
#Note that this line is required so that all cores in cluster have this variable available
clusterExport(clust, "base")
# Setup cluster
clust <- makeCluster(no_cores) #This line will take time
countThreads()
#Setting a base variable
base <- 4
#Note that this line is required so that all cores in cluster have this variable available
clusterExport(clust, "base")
countThreads()
stopCluster(clust)
library(doParallel)
registerDoParallel(4)
install.packages(doParallel)
install.packages("doParallel")
library(doParallel)
registerDoParallel(4)
countThreads()
countThreads
library(SeqArray)
?vcf2gds
?seqVCF2GDS
p <- read.delim("/mnt/hdd/large-PD/v2/GWAS/large.pheno.03_2021.txt")
View(p)
fit1 <- glm(PD_STATUS~AGE+SEX+PC1+PC2+PC3+PC4+PC5)
fit1 <- glm(PD_STATUS~AGE+SEX+PC1+PC2+PC3+PC4+PC5, data=p, family = "binomial")
summary(fit1)
p$SEX <- as.factor(p$SEX)
fit2 <- glm(PD_STATUS~AGE+SEX+PC1+PC2+PC3+PC4+PC5, data=p, family = "binomial")
summary(fit2)
p <- read.delim("/mnt/hdd/large-PD/v2/GWAS/large.pheno.03_2021.txt")
p$SEX <- ifelse(p$SEX == 2 & !is.na(p$SEX), "FEMALE", ifelse(p$SEX == 1 & !is.na(p$SEX), "MALE", NA))
fit3 <- glm(PD_STATUS~AGE+SEX+PC1+PC2+PC3+PC4+PC5, data=p, family = "binomial")
summary(fit3)
p <- p[complete.cases(p$PD_STATUS),]
p$PD_STATUS <- ifelse(p$PD_STATUS == 1, 2, 1)
fit4 <- glm(PD_STATUS~AGE+SEX+PC1+PC2+PC3+PC4+PC5, data=p, family = "binomial")
